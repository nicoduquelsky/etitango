version: '3'
services:
  db_prod:
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    restart: unless-stopped
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/custom.cnf
    env_file:
      - ./.env.prod  
    ports:
      - "3306:3306"
    networks:
      - network_db
    expose:
      - 3306

  app_prod:
    build:
      context: .
      dockerfile: ./django/Dockerfile.prod
    restart: unless-stopped
    # ports:
      # - "80:8000"
    expose:
      - 8000
    networks:
      - network_proxy
      - network_db
    links:
      - db_prod:db
    env_file:
      - ./.env.prod
    depends_on:
      - db_prod
    command: sh -c "/scripts/wait && /scripts/docker-entrypoint.sh"
    volumes:
      - app_data:/vol/web

  nginx-proxy:
    build:
      context: ./proxy
      dockerfile: ./Dockerfile
    restart: always
    networks:
      - network_proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app_prod
    volumes:
      - app_data:/vol/web
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
  #   labels:
  #     - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   # restart: always
  #   networks:
  #     - network_proxy
  #   depends_on:
  #     - nginx-proxy
  #   env_file:
  #     - ./.env.prod
  #   volumes:
  #     - certs:/etc/nginx/certs:rw
  #     - vhostd:/etc/nginx/vhost.d
  #     - html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro


volumes:
  mysql_data:
  app_data:
  # Letscrypt configuration
  certs:
  html:
  vhostd:

networks:
  network_proxy:
    driver: bridge
  network_db:
    driver: bridge