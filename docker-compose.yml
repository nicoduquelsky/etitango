version: '3'
services:
  db_prod:
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    restart: unless-stopped
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/custom.cnf
    env_file:
      - ./.env.prod  
    ports:
      - 3306:3306
    networks:
      - network_db
    expose:
      - 3306

  app_prod:
    build: .
    restart: unless-stopped
    # ports:
      # - 8000:8000
    expose:
      - 8000
    networks:
      - network_proxy
      - network_db
    links:
      - db_prod:db
    env_file:
      - ./.env.prod
    depends_on:
      - db_prod
    command: sh -c "./scripts/wait && ./scripts/docker-entrypoint.sh"
    volumes:
      - app_data:/vol/web

  proxy_prod:
    build:
      context: ./proxy
    restart: unless-stopped
    volumes:
      - ./proxy/conf.d/:/etc/nginx/conf.d
      - app_data:/var/www/html
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
    ports:
      - "80:80"
    links:
      - app_prod:app_prod
    networks:
      - network_proxy
    depends_on:
      - app_prod

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - app_data:/var/www/html
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
    depends_on:
      - proxy_prod
    command: certonly --webroot --webroot-path=/var/www/html --email schrottgerardo@gmail.com --agree-tos --no-eff-email --staging -d etitango.com.ar  -d www.etitango.com.ar      

volumes:
  app_data:
  mysql_data:
  certbot_etc:
  certbot_var:

networks:
  network_proxy:
    driver: bridge
  network_db:
    driver: bridge